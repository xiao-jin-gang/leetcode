// 给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b], nums[c], nums[d]] （若两个四元组元素一一对应，则认为两个四元组重复）：


//排序+双指针

class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        List<List<Integer>> ans = new ArrayList<>();
        if (nums == null || nums.length < 4) {
            return ans;
        }
        Arrays.sort(nums);
        
        for(int first = 0; first < nums.length; first++) {
            int number = target - nums[first];  //获取目标值
            if(first > 0 && nums[first] == nums[first - 1]) {
                continue;
            }else {
                for(int second = first + 1; second < nums.length; second++) {
                    if(second > first+1 && nums[second] == nums[second - 1]){
                        continue;
                    }
                    for(int third = second +1;third < nums.length; third++) {	//循环到三次，
                        if(third > second + 1 && nums[third] == nums[third - 1]){
                            continue;
                        }
                        int fourth = nums.length - 1;
                        while(third < fourth && nums[second]+nums[third]+nums[fourth] > number) {
                            fourth--;
                        }
                        if(third == fourth) {
                            break;
                        }
                        if(nums[second] + nums[third] + nums[fourth] == number){
                            List<Integer> list = new ArrayList<>();
                            list.add(nums[first]);
                            list.add(nums[second]);
                            list.add(nums[third]);
                            list.add(nums[fourth]);
                            ans.add(list);
                        }
                    }                    

                }
            }

        }
        return ans;
    }
}