
// 实现 strStr() 函数。

//给你两个字符串 haystack 和 needle ，请你在 haystack 字符串中找出 needle 字符串出现的第一个位置（下标从 0 开始）。如果不存在，则返回  -1 。


class Solution {
    public int strStr(String haystack, String needle) {
        // next数组
        int[] array = new int[needle.length()];
        getNext(array,needle);
        int j = -1;
        //模式串匹配
        for(int i = 0; i < haystack.length(); i++ ) {
            //匹配不相等
            while(j >= 0 && haystack.charAt(i) != needle.charAt(j+1)) {s
                j = array[j];
            }
            //匹配相等
            if(haystack.charAt(i) == needle.charAt(j+1)){
                j++;
            }
            if(j == needle.length() -1) {
                return (i - needle.length() + 1);
            }
        }
        return -1;        
    }

    

    // a a  b a a  f
    //-1 0 -1 0 1 -1
    //得到next数组 找到文本串不匹配时模式串回退的位置
    void getNext(int []next , String s) {
        //最长相等前后缀
        int j = -1; //整体后移一位
        next[0] = j;
        for(int i = 1; i < s.length(); i++) {

            while(j >= 0 && s.charAt(j+1) != s.charAt(i)) {
                //j回退到next[j]数组中的值的位置
                j = next[j];
            }
            if(s.charAt(i) == s.charAt(j+1)) {
                j++;
            }
            next[i] = j;
        }
    }
}