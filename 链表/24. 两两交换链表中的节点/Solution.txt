// 给你一个链表，两两交换其中相邻的节点，并返回交换后链表的头节点。你必须在不修改节点内部的值的情况下完成本题（即，只能进行节点交换）。
/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null) {
            return head;
        }
        ListNode dummyNode = new ListNode(0);
        dummyNode.next = head;
        ListNode curr = dummyNode; 
        // 当前节点下，下下不为空
        while (curr.next != null && curr.next.next != null) {
            //swap
            ListNode tmp = head.next.next;  //记录临时节点用于下次判断
            curr.next = head.next;
            head.next.next = head;
            head.next = tmp;
            curr = head;
            head = head.next;
        }
        return dummyNode.next;
    }
}